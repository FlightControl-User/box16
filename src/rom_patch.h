#pragma once

#if !defined(ROM_PATCH_H)
#define ROM_PATCH_H

#include <SDL.h>
#include "glue.h"

#	define ROM_PATCH_CREATE_OK (0)
#	define ROM_PATCH_CREATE_ERROR_COULD_NOT_OPEN_R0 (-1)
#	define ROM_PATCH_CREATE_ERROR_COULD_NOT_OPEN_R1 (-2)
#	define ROM_PATCH_CREATE_ERROR_COULD_NOT_OPEN_PATCH_OUT (-3)
#	define ROM_PATCH_CREATE_ERROR_ROM0_TOO_LARGE (-4)
#	define ROM_PATCH_CREATE_ERROR_ROM1_TOO_LARGE (-5)
#	define ROM_PATCH_CREATE_ERROR_OUT_OF_MEMORY (-6)
#	define ROM_PATCH_CREATE_ERROR_COULD_NOT_READ_R0 (-7)
#	define ROM_PATCH_CREATE_ERROR_COULD_NOT_READ_R1 (-8)
#	define ROM_PATCH_CREATE_ERROR_HASH_MATCH (-9)
#	define ROM_PATCH_CREATE_ERROR_INTERNAL_FAILURE (-10)
#	define ROM_PATCH_CREATE_ERROR_SIZE_MISMATCH (-11)

#	define ROM_PATCH_LOAD_OK (0)
#	define ROM_PATCH_LOAD_INVALID_PATCH_FILE (-1)
#	define ROM_PATCH_LOAD_VERSION_MISMATCH (-2)
#	define ROM_PATCH_LOAD_INCORRECT_ROM_TO_PATCH (-3)
#	define ROM_PATCH_LOAD_PATCH_FAILED (-4)

int rom_patch_create(const uint8_t (&rom0)[ROM_SIZE], const uint8_t (&rom1)[ROM_SIZE], SDL_RWops *patch_file);
int rom_patch_load(SDL_RWops *patch_file, uint8_t (&rom)[ROM_SIZE]);

#endif